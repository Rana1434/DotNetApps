// <auto-generated />
using System;
using DalLib;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DalLib.Migrations
{
    [DbContext(typeof(SSDbContext))]
    [Migration("20231123064712_v1")]
    partial class v1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DalLib.Customer", b =>
                {
                    b.Property<int>("custId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("custId"), 1L, 1);

                    b.Property<string>("custAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("custName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("custId");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("DalLib.Orders", b =>
                {
                    b.Property<int>("orderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderId"), 1L, 1);

                    b.Property<int?>("CustomercustId")
                        .HasColumnType("int");

                    b.Property<int>("OrderDate")
                        .HasColumnType("int");

                    b.HasKey("orderId");

                    b.HasIndex("CustomercustId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("DalLib.OrderShoes", b =>
                {
                    b.Property<int>("orderedId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderedId"), 1L, 1);

                    b.Property<int?>("OrdersorderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("ShoesshoeId")
                        .HasColumnType("int");

                    b.HasKey("orderedId");

                    b.HasIndex("OrdersorderId");

                    b.HasIndex("ShoesshoeId");

                    b.ToTable("OrderShoes");
                });

            modelBuilder.Entity("DalLib.Shoes", b =>
                {
                    b.Property<int>("shoeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("shoeId"), 1L, 1);

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("shoeColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("shoePrice")
                        .HasColumnType("float");

                    b.Property<int>("shoeSize")
                        .HasColumnType("int");

                    b.Property<string>("shoeStyle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("shoeId");

                    b.ToTable("Shoes");
                });

            modelBuilder.Entity("DalLib.Orders", b =>
                {
                    b.HasOne("DalLib.Customer", null)
                        .WithMany("Orders")
                        .HasForeignKey("CustomercustId");
                });

            modelBuilder.Entity("DalLib.OrderShoes", b =>
                {
                    b.HasOne("DalLib.Orders", null)
                        .WithMany("OrderShoes")
                        .HasForeignKey("OrdersorderId");

                    b.HasOne("DalLib.Shoes", null)
                        .WithMany("OrderShoes")
                        .HasForeignKey("ShoesshoeId");
                });

            modelBuilder.Entity("DalLib.Customer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("DalLib.Orders", b =>
                {
                    b.Navigation("OrderShoes");
                });

            modelBuilder.Entity("DalLib.Shoes", b =>
                {
                    b.Navigation("OrderShoes");
                });
#pragma warning restore 612, 618
        }
    }
}
